---
import { type CollectionEntry, getCollection } from 'astro:content';
import Base from '@/layouts/Base.astro';
import { type GetStaticPathsResult } from 'astro';
import { getI18nPaths } from '@/i18n';
import Project from '../../../../components/Project.astro';
import { formatDateAsMonth } from '../../../../lib/utils';

export async function getStaticPaths(): Promise<GetStaticPathsResult> {
  const tags = (await getCollection('blog'))
    .reduce((acc, page) => {
      page.data.tags.forEach((tag) => {
        acc = acc || [];
        acc.unshift(tag);
      });
      return acc;
    }, [] as string[]);

  return tags.flatMap(tag =>
    getI18nPaths().map(i18nPath => ({
      params: {
        locale: i18nPath.params.locale,
        slug: tag,
      },
      props: {
        tag: tag,
      },
    })),
  );
}

const { tag } = Astro.props as { tag: string };

const postsGroupByDate = (await getCollection('blog', p =>
  p.data.locale === Astro.currentLocale
  && p.data.tags.includes(tag),
))
  .sort((a, b) => b.data.created_at.getTime() - a.data.created_at.getTime())
  .reduce((acc, post) => {
    const date = new Date(post.data.created_at);
    const year = date.getFullYear().toString();
    const month = date.getMonth().toString();

    acc[year] = acc[year] || {};
    acc[year][month] = acc[year][month] || [];
    acc[year][month].push(post);

    return acc;
  }, {} as Record<string, Record<string, Array<CollectionEntry<'blog'>>>>);
---

<Base>
  <div
    class="w-full font-serif flex flex-col gap-8 *:w-full"
  >
    <div class="text-6xl font-serif">
      <h1 class="scroll-m-16">
        <span class="font-mono text-3xl">#</span>{tag}
      </h1>
    </div>
    <ul>
      {Object.entries(postsGroupByDate).reverse().map(([year, months]) => (
        <li class="mb-4 px-4 md:px-8 xl:px-12">
          <h2 class="text-4xl font-mono">{year}</h2>
          <ul>
            {Object.entries(months).reverse().map(([month, posts]) => (
              <li class="my-4 px-4 md:px-8 xl:px-12">
                <h3 class="text-2xl font-mono my-4">{formatDateAsMonth(
                  new Date(Number(year), Number(month)).toString(), Astro.currentLocale || 'en',
                )}
                </h3>
                <div class="flex flex-wrap gap-2">
                  {posts.map(post => (
                    <Project
                      key={post.id}
                      title={post.data.title}
                      description={post.data.description}
                      date={post.data.created_at}
                      cover={post.data.cover}
                      id={post.data.translation_id || post.id}
                      className="w-96"
                    />
                  ))}
                </div>
              </li>
            ))}
          </ul>
        </li>
      ))}
    </ul>
  </div>
</Base>
