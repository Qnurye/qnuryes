---
import Base from '@/layouts/Base.astro';
export { getI18nPaths as getStaticPaths } from '@/i18n';
import { ChevronDownIcon } from 'lucide-react';
import { Markdown } from 'astro-remote';

import Gmail from 'simple-icons-astro/Gmail';
import Github from 'simple-icons-astro/Github';
import Project from '@/components/Project.astro';

import AstroIcon from 'simple-icons-astro/Astro';
import NextjsIcon from 'simple-icons-astro/Nextdotjs';
import SpringIcon from 'simple-icons-astro/Spring';
import LaravelIcon from 'simple-icons-astro/Laravel';
import VueIcon from 'simple-icons-astro/Vuedotjs';
import FastapiIcon from 'simple-icons-astro/Fastapi';
import FigmaIcon from 'simple-icons-astro/Figma';
import WechatIcon from 'simple-icons-astro/Wechat';
import GinIcon from 'simple-icons-astro/Gin';
import CodeigniterIcon from 'simple-icons-astro/Codeigniter';
import LatexIcon from 'simple-icons-astro/Latex';
import GraphqlIcon from 'simple-icons-astro/Graphql';
import FlutterIcon from 'simple-icons-astro/Flutter';
import CmakeIcon from 'simple-icons-astro/Cmake';
import MaterialdesignIcon from 'simple-icons-astro/Materialdesign';
import { loadTranslations } from '@/i18n';
import 'aos/dist/aos.css';
import { type CollectionEntry, getCollection } from 'astro:content';

const t = await loadTranslations(Astro.currentLocale);
const projectsPage = await getCollection('blog', (
  { data }) => data.tags.includes('project') && data.locale === (Astro.currentLocale || 'en'))
;
let projectsCol1: Array<CollectionEntry<'blog'>> = [],
  projectsCol2: Array<CollectionEntry<'blog'>> = [],
  projectsCol3: Array<CollectionEntry<'blog'>> = [];

if (projectsPage.length > 0) {
  for (let index = 0; index < projectsPage.length; index++) {
    const project = projectsPage[index];
    if (index % 3 === 0) {
      projectsCol1.push(project);
    } else if (index % 3 === 1) {
      projectsCol2.push(project);
    } else {
      projectsCol3.push(project);
    }
  }
} else {
  projectsCol1 = [];
  projectsCol2 = [];
  projectsCol3 = [];
}
---
<Base
  title={t('landing.page_title')}
  description={t('landing.page_description')}
  keywords={t('landing.page_keywords')}
  className="flex flex-col gap-4"
>
    <!-- Landing -->
    <div
      class={'h-[80vh] w-full font-serif mb-12 md:mb-36 flex flex-col gap-4 md:gap-8'
        + ' justify-between *:py-8 md:*:py-16 *:w-full'}
    >
      <div
        class="text-xl md:text-2xl lg:text-3xl"
        data-aos="fade-right"
        data-aos-duration="2048"
        data-aos-easing="ease-out-cubic"
      >
        <Markdown content={t('landing.welcome')} />
      </div>
      <div
        class={'text-lg md:text-xl lg:text-2xl text-end *:tracking-wide *:[word-spacing:0.5rem]'
          + ' md:*:[word-spacing:0.8rem]'}
        data-aos="fade-left"
        data-aos-anchor-placement="bottom-bottom"
        data-aos-duration="2048"
        data-aos-easing="ease-out-cubic"
      >
        <Markdown content={t('landing.lines')} />
      </div>
    </div>

    <!-- Read More Button -->
    <button
      id="more"
      class={'transition-opacity duration-500 absolute left-1/2 -translate-x-1/2 bottom-2 flex flex-col gap-0.5'
        + ' items-center opacity-70 animate-bounce hover:cursor-pointer'}
    >
      <span class="font-serif">SCROLL</span>
      <ChevronDownIcon size={16} />
    </button>

    <!-- About -->
    <p class="size-0" id="about"></p>
    <div
      class="min-h-screen w-full font-serif flex flex-col gap-4 md:gap-8 *:w-full"
      data-aos="fade-up"
      data-aos-duration="1024"
      data-aos-anchor-placement="top-center"
    >
      <div class="text-5xl md:text-6xl lg:text-7xl">
        <h1 class="scroll-m-16">{t('about.title')}</h1>
      </div>
      <div class={'flex gap-4 md:gap-0 flex-col lg:flex-row justify-between *:flex'
        + ' *:flex-col *:gap-4'}
      >
        <div class="*:flex *:flex-col *:gap-3 *:p-3 max-w-full md:max-w-prose">
          <div data-aos="fade-right" data-aos-delay="16">
            <h2 class="font-serif text-2xl md:text-3xl">{t('about.introduction')}</h2>
            <p>{t('about.introduction_text')}</p>
          </div>
          <div data-aos="fade-right" data-aos-delay="32">
            <h2 class="font-serif text-2xl md:text-3xl">{t('about.unemployed')}</h2>
            <p>{t('about.unemployed_text')}</p>
          </div>
          <div data-aos="fade-right" data-aos-delay="64">
            <h2 class="font-serif text-2xl md:text-3xl">{t('about.interests')}</h2>
            <p>{t('about.interests_text')}</p>
          </div>
          <div data-aos="fade-right" data-aos-delay="128">
            <h2 class="font-serif text-2xl md:text-3xl">{t('about.contact')}</h2>
            <div class="flex flex-row gap-4">
              <a href="mailto:contact@qnury.es">
                <Gmail />
              </a>
              <a href="https://github.com/Qnurye">
                <Github />
              </a>
            </div>
          </div>
        </div>
        <div
          class="flex-1 items-end xl:items-center mt-4 md:mt-0 *:flex *:flex-col *:gap-3 *:p-3"
        >
          <div class="sm:min-w-64 flex items-end lg:items-start">
            <h1
              class="font-serif text-2xl md:text-3xl"
              data-aos="fade-left"
              data-aos-delay="216"
            >{t('about.tech_stack')}
            </h1>
            <div
              class="*:flex *:flex-col *:items-end *:lg:items-start *:gap-2 flex flex-col gap-4"
            >
              <div
                data-aos="fade-left"
                data-aos-delay="232"
              >
                <h2>{t('about.tech_stack_proficient')}</h2>
                <div class="flex flex-wrap gap-4 justify-end lg:justify-start">
                  <AstroIcon />
                  <NextjsIcon />
                  <SpringIcon />
                  <LaravelIcon />
                  <FastapiIcon />
                  <WechatIcon title="微信小程序" fill="currentColor" />
                  <MaterialdesignIcon />
                </div>
              </div>
              <div
                data-aos="fade-left"
                data-aos-delay="264"
              >
                <h2>{t('about.tech_stack_familiar')}</h2>
                <div class="flex flex-wrap gap-4 justify-end lg:justify-start">
                  <LatexIcon />
                  <GinIcon />
                  <CodeigniterIcon />
                  <VueIcon />
                  <FigmaIcon />
                </div>
              </div>
              <div
                data-aos="fade-left"
                data-aos-delay="328"
              >
                <h2>{t('about.tech_stack_beginner')}</h2>
                <div class="flex flex-wrap gap-4 justify-end lg:justify-start">
                  <GraphqlIcon />
                  <FlutterIcon />
                  <CmakeIcon />
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Portfolio -->
    {projectsCol1.length > 0 && (
      <p class="size-0" id="portfolio"></p>
      <div
        class="w-full font-serif flex flex-col gap-4 md:gap-8 *:w-full"
        data-aos="fade-up"
        data-aos-duration="1024"
      >
        <div class="text-4xl md:text-5xl lg:text-6xl">
          <h1 class="scroll-m-16">{t('portfolio.title')}</h1>
        </div>

        <div class="flex flex-col gap-4 md:hidden items-center">
          {[...projectsCol1, ...projectsCol2, ...projectsCol3].map((project, index) => (
            <div data-aos="fade-up" data-aos-delay={100 * (index % 3 + 3)}>
              <Project
                key={index}
                title={project.data.title}
                description={project.data.description}
                date={project.data.created_at}
                cover={project.data.cover}
                id={project.data.translation_id || project.id}
              />
            </div>
          ))}
        </div>

        <div class="hidden md:flex md:flex-row gap-2 justify-around *:flex *:flex-col *:gap-2">
          <div data-aos="fade-up" data-aos-delay="300">
            {projectsCol1.map((project, index) => (
              <Project
                key={index}
                title={project.data.title}
                description={project.data.description}
                date={project.data.created_at}
                cover={project.data.cover}
                id={project.data.translation_id || project.id}
              />
            ))}
          </div>
          <div data-aos="fade-up" data-aos-delay="400">
            {projectsCol2.map((project, index) => (
              <Project
                key={index}
                title={project.data.title}
                description={project.data.description}
                date={project.data.created_at}
                cover={project.data.cover}
                id={project.data.translation_id || project.id}
              />
            ))}
          </div>
          <div data-aos="fade-up" data-aos-delay="500">
            {projectsCol3.map((project, index) => (
              <Project
                key={index}
                title={project.data.title}
                description={project.data.description}
                date={project.data.created_at}
                cover={project.data.cover}
                id={project.data.translation_id || project.id}
              />
            ))}
          </div>
        </div>
      </div>)}

    <!-- Timeline -->
    <div
      data-aos="fade-up"
      data-aos-duration="1024"
      id="timeline_wrapper"
    >
    </div>
    <script is:inline type="module">
      const wrapper = document.getElementById('timeline_wrapper');
      const originalPath = window.location.pathname;
      const blogPath = originalPath + 'blog';

      // eslint-disable-next-line @typescript-eslint/explicit-function-return-type
      const pushStateOnce = (path) => {
        if (window.location.pathname !== path) {
          history.pushState({}, '', path);
        }
      };

      window.addEventListener('popstate', () => {
        if (window.location.pathname === originalPath) {
          window.scrollTo({ top: 0, behavior: 'smooth' });
        } else if (window.location.pathname === blogPath) {
          wrapper.scrollIntoView({ behavior: 'smooth' });
        }
      });

      const observer = new IntersectionObserver(async ([entry]) => {
        if (entry.isIntersecting) {
          wrapper.innerHTML = await fetch('blog/partial/timeline')
            .then(res => res.text());

          wrapper.classList.remove('opacity-0');
          wrapper.classList.remove('translate-y-12');
          pushStateOnce(blogPath);
          observer.disconnect();

          // 可见性 observer，监听滑出时路由回退
          const visibilityObserver = new IntersectionObserver(([entry]) => {
            if (entry.isIntersecting) {
              pushStateOnce(blogPath);
            } else {
              pushStateOnce(originalPath);
            }
          }, { threshold: 0.1 });

          visibilityObserver.observe(wrapper);
        }
      }, { threshold: 0.3 });

      observer.observe(wrapper);
    </script>

</Base>

<script>
  import AOS from 'aos';

  AOS.init({
    once: false,
    mirror: true,
    easing: 'ease-in-out-back',
  });

  document.getElementById('more')?.addEventListener('click', () => {
    window.scrollTo({
      top: window.innerHeight,
      behavior: 'smooth',
    });
  });

  window.addEventListener('scroll', () => {
    const moreButton = document.getElementById('more');
    if (!moreButton) { return; }
    if (window.scrollY > 0) {
      moreButton.style.opacity = '0';
      moreButton.style.pointerEvents = 'none';
    } else {
      moreButton.style.opacity = '0.7';
      moreButton.style.pointerEvents = 'auto';
    }
  });
</script>
